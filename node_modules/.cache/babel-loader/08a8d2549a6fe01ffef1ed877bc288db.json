{"remainingRequest":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/黑马电商/vue_shop/src/components/report/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/黑马电商/vue_shop/src/components/report/Report.vue","mtime":1587801715000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587711876000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FwcGxlL0Rlc2t0b3AvXHU5RUQxXHU5QTZDXHU3NTM1XHU1NTQ2L3Z1ZV9zaG9wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gMS4g5a+85YWlZWNoYXJ0cwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsKaW1wb3J0IF8gZnJvbSAnbG9kYXNoJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJSZXBvcnQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDpnIDopoHlkIjlubbnmoTmlbDmja4KICAgICAgb3B0aW9uczogewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAi55So5oi35p2l5rqQIgogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogImF4aXMiLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogImNyb3NzIiwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICIjRTlFRUYzIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAiMyUiLAogICAgICAgICAgcmlnaHQ6ICI0JSIsCiAgICAgICAgICBib3R0b206ICIzJSIsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiBbewogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlCiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAidmFsdWUiCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICAvLyDmraTml7bpobXpnaLnmoTlhYPntKDlt7LmuLLmn5Plrozmr5UKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgbXlDaGFydCwgX3lpZWxkJF90aGlzJCRodHRwJGdlLCByZXM7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgLy8gMy4g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgICAgICAgICAgIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1haW4iKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRodHRwLmdldCgicmVwb3J0cy90eXBlLzEiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfeWllbGQkX3RoaXMkJGh0dHAkZ2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpcyQkaHR0cCRnZS5kYXRhOwoKICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfdGhpcy4kbWVzc2FnZS5lcnJvcigi6I635Y+W5oqY57q/5Zu+5aSx6LSl77yBIikpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIC8vIDQuIOWHhuWkh+aVsOe7hOWSjOmFjee9rumhuQogICAgICAgICAgICAgIF8ubWVyZ2UocmVzLmRhdGEsIF90aGlzLm9wdGlvbnMpOyAvLyA1LiDlsZXnpLrmlbDmja4KCgogICAgICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHJlcy5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHt9Cn07"},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AAFA,KAAA;AAiCA,GApCA;AAqCA,EAAA,OArCA,qBAqCA,CAAA,CArCA;AAsCA;AACA,EAAA,OAvCA,qBAuCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAA,OAFA,GAEA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAFA;AAAA;AAAA,qBAIA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAJA;;AAAA;AAAA;AAIA,cAAA,GAJA,yBAIA,IAJA;;AAAA,oBAMA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GANA;AAAA;AAAA;AAAA;;AAAA,+CAOA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,UAAA,CAPA;;AAAA;AAUA;AACA,cAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,OAAA,EAXA,CAaA;;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,GAAA,CAAA,IAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,GAtDA;AAuDA,EAAA,OAAA,EAAA;AAvDA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 2. 为ECharts准备一个具备大小（宽高）的Dom -->\n      <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script>\n// 1. 导入echarts\nimport echarts from \"echarts\";\nimport _ from 'lodash'\n\nexport default {\n  name: \"Report\",\n  data() {\n    return {\n      // 需要合并的数据\n      options: {\n        title: {\n          text: \"用户来源\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#E9EEF3\"\n            }\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            boundaryGap: false\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\"\n          }\n        ]\n      }\n    };\n  },\n  created() {},\n  // 此时页面的元素已渲染完毕\n  async mounted() {\n    // 3. 基于准备好的dom，初始化echarts实例\n    var myChart = echarts.init(document.getElementById(\"main\"));\n\n    const { data: res } = await this.$http.get(\"reports/type/1\");\n\n    if (res.meta.status !== 200) {\n      return this.$message.error(\"获取折线图失败！\");\n    }\n\n    // 4. 准备数组和配置项\n    _.merge(res.data, this.options)\n\n    // 5. 展示数据\n    myChart.setOption(res.data);\n  },\n  methods: {}\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/report"}]}