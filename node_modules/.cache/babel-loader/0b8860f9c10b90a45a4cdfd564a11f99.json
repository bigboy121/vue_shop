{"remainingRequest":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/thread-loader/dist/cjs.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Add.vue","mtime":1587718863000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/thread-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,GADA;AAEA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,YAAA,EAAA,CAHA;AAIA,QAAA,YAAA,EAAA,CAJA;AAKA;AACA,QAAA,SAAA,EAAA,EANA;AAOA;AACA,QAAA,IAAA,EAAA,EARA;AASA;AACA,QAAA,eAAA,EAAA,EAVA;AAWA,QAAA,KAAA,EAAA;AAXA,OAHA;AAgBA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,UAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,WAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAJA;AAOA,QAAA,YAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAPA;AAUA,QAAA,YAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAVA;AAaA,QAAA,SAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AAbA,OAjBA;AAkCA;AACA,MAAA,QAAA,EAAA,EAnCA;AAoCA;AACA,MAAA,WAAA,EAAA,EArCA;AAsCA;AACA,MAAA,WAAA,EAAA,EAvCA;AAwCA;AACA,MAAA,MAAA,EAAA,mDAzCA;AA0CA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,aAAA,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA;AADA,OA3CA;AA8CA;AACA,MAAA,WAAA,EAAA,EA/CA;AAgDA;AACA,MAAA,cAAA,EAAA;AAjDA,KAAA;AAmDA,GAtDA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,WAAA;AACA,GAzDA;AA0DA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,WAFA,yBAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,CADA;;AAAA;AAAA;AACA,gBAAA,GADA,yBACA,IADA;;AAAA,sBAGA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAHA;AAAA;AAAA;AAAA;;AAAA,iDAIA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,CAJA;;AAAA;AAOA,gBAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KAVA;AAWA,IAAA,YAXA,0BAWA;AACA,UAAA,KAAA,OAAA,CAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,OAAA,CAAA,SAAA,GAAA,EAAA;AACA;AACA,KAfA;AAgBA,IAAA,cAhBA,0BAgBA,UAhBA,EAgBA,aAhBA,EAgBA;AACA,UAAA,aAAA,KAAA,GAAA,IAAA,KAAA,OAAA,CAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,UAAA;AACA,eAAA,KAAA;AACA;AACA,KArBA;AAsBA,IAAA,UAtBA,wBAsBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA,MAAA,CAAA,WAAA,KAAA,GAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGA,MAAA,CAAA,KAAA,CAAA,GAAA,sBACA,MAAA,CAAA,MADA,kBAEA;AACA,kBAAA,MAAA,EAAA;AAAA,oBAAA,GAAA,EAAA;AAAA;AADA,iBAFA,CAHA;;AAAA;AAAA;AAGA,gBAAA,GAHA,yBAGA,IAHA;;AAAA,sBAUA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAVA;AAAA;AAAA;AAAA;;AAAA,kDAWA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAXA;;AAAA;AAcA,gBAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,kBAAA,IAAA,CAAA,SAAA,GACA,IAAA,CAAA,SAAA,CAAA,MAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CADA;AAEA,iBAHA;AAIA,gBAAA,MAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA;AAlBA;AAAA;;AAAA;AAAA,sBAmBA,MAAA,CAAA,WAAA,KAAA,GAnBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoBA,MAAA,CAAA,KAAA,CAAA,GAAA,sBACA,MAAA,CAAA,MADA,kBAEA;AACA,kBAAA,MAAA,EAAA;AAAA,oBAAA,GAAA,EAAA;AAAA;AADA,iBAFA,CApBA;;AAAA;AAAA;AAoBA,gBAAA,IApBA,0BAoBA,IApBA;;AAAA,sBA2BA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GA3BA;AAAA;AAAA;AAAA;;AAAA,kDA4BA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CA5BA;;AAAA;AA+BA,gBAAA,MAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,KAvDA;AAwDA;AACA,IAAA,aAzDA,yBAyDA,IAzDA,EAyDA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KA5DA;AA6DA;AACA,IAAA,YA9DA,wBA8DA,IA9DA,EA8DA;AACA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAFA,CAGA;;AACA,UAAA,CAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,KAAA,QAAA;AAAA,OAAA,CAAA,CAJA,CAKA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,KArEA;AAsEA;AACA,IAAA,aAvEA,yBAuEA,QAvEA,EAuEA;AACA;AACA,UAAA,OAAA,GAAA;AAAA,QAAA,GAAA,EAAA,QAAA,CAAA,IAAA,CAAA;AAAA,OAAA,CAFA,CAGA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA,KA5EA;AA6EA;AACA,IAAA,GA9EA,iBA8EA;AAAA;;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AAAA,2EAAA,kBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KADA;AAAA;AAAA;AAAA;;AAAA,oDAEA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,YAAA,CAFA;;AAAA;AAIA;AACA,kBAAA,IALA,GAKA,CAAA,CAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CALA;AAOA,kBAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAPA,CASA;;AACA,kBAAA,MAAA,CAAA,WAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,wBAAA,OAAA,GAAA;AAAA,sBAAA,OAAA,EAAA,IAAA,CAAA,OAAA;AAAA,sBAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA;AAAA,qBAAA;;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AACA,mBAHA,EAVA,CAcA;;;AACA,kBAAA,MAAA,CAAA,WAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,wBAAA,OAAA,GAAA;AAAA,sBAAA,OAAA,EAAA,IAAA,CAAA,OAAA;AAAA,sBAAA,UAAA,EAAA,IAAA,CAAA;AAAA,qBAAA;;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AACA,mBAHA;;AAIA,kBAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAnBA,CAqBA;;AArBA;AAAA,yBAsBA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAtBA;;AAAA;AAAA;AAsBA,kBAAA,GAtBA,yBAsBA,IAtBA;;AAAA,wBAuBA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAvBA;AAAA;AAAA;AAAA;;AAAA,oDAwBA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,SAAA,CAxBA;;AAAA;AA0BA,kBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,SAAA;;AAEA,kBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AA8BA;AA7GA,GA1DA;AAyKA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,KAAA,OAAA,CAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA,OAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA;AANA;AAzKA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区 -->\n    <el-card>\n      <!-- 提示区 -->\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\n      <!-- 步骤条区 -->\n      <el-steps :space=\"200\" :active=\"activeIndex - 0\" finish-status=\"success\" align-center>\n        <el-step title=\"基本信息\"></el-step>\n        <el-step title=\"商品参数\"></el-step>\n        <el-step title=\"商品属性\"></el-step>\n        <el-step title=\"商品图片\"></el-step>\n        <el-step title=\"商品内容\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n\n      <!-- tab栏区域 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n        label-position=\"top\"\n      >\n        <el-tabs\n          v-model=\"activeIndex\"\n          :tab-position=\"'left'\" \n          :before-leave=\"beforeTabLeave\"\n          @tab-click=\"tabClicked\"\n        >\n          <el-tab-pane label=\"基本信息\" name=\"0\">\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\n              <el-input v-model=\"addForm.goods_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n              <el-input v-model=\"addForm.goods_weight\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\n              <el-input v-model=\"addForm.goods_number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\n              <el-cascader\n                v-model=\"addForm.goods_cat\"\n                :options=\"catelist\"\n                :props=\"{ expandTrigger: 'hover', label: 'cat_name', value:'cat_id', children: 'children'}\"\n                @change=\"handleChange\"\n              ></el-cascader>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品参数\" name=\"1\">\n            <!-- 渲染表单的item项 -->\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTabData\" :key=\"item.attr_id\">\n              <!-- 复选框组 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb,i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品属性\" name=\"2\">\n            <el-form-item\n              :label=\"item.attr_name\"\n              v-for=\"(item,i) in onlyTabData\"\n              :key=\"item.attr_id\"\n            >\n              <el-input v-model=\"item.attr_vals\"></el-input>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品图片\" name=\"3\" disabled>\n            <!-- action 表示图片要上传到后台api地址 -->\n            <el-upload\n              :action=\"upload\"\n              :on-preview=\"handlePreview\"\n              :on-remove=\"handleRemove\"\n              list-type=\"picture\"\n              :headers=\"headerObj\"\n              :on-success=\"handleSuccess\"\n            >\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n            </el-upload>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品内容\" name=\"4\">\n            <!-- 富文本编辑器组件 -->\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n            <!-- 添加商品的按钮 -->\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n    </el-card>\n\n    <!-- 图片预览 -->\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\" >\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  name: \"Add\",\n  data() {\n    return {\n      activeIndex: \"0\",\n      // 添加商品的表单数据对象\n      addForm: {\n        goods_name: \"\",\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        // 商品所属的分类数组\n        goods_cat: [],\n        // 图片的数组\n        pics: [],\n        // 商品的详情描述,\n        goods_introduce: '',\n        attrs:[]\n      },\n      // 添加商品表单验证规则\n      addFormRules: {\n        goods_name: [\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" }\n        ],\n        goods_price: [\n          { required: true, message: \"请输入商品价格\", trigger: \"blur\" }\n        ],\n        goods_weight: [\n          { required: true, message: \"请输入商品重量\", trigger: \"blur\" }\n        ],\n        goods_number: [\n          { required: true, message: \"请输入商品数量\", trigger: \"blur\" }\n        ],\n        goods_cat: [\n          { required: true, message: \"请选择商品分类\", trigger: \"blur\" }\n        ]\n      },\n      // 商品分类\n      catelist: [],\n      // 动态参数列表数据\n      manyTabData: [],\n      // 静态属性列表\n      onlyTabData: [],\n      // 上传图片到url地址\n      upload: \"http://timemeetyou.com:8889/api/private/v1/upload\",\n      // 图片上传组件到headers请求头部对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem(\"token\")\n      },\n      // 预览图片地址\n      previewPath: \"\",\n      // 图片预览显示框\n      previewVisible: false\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取所有商品分类数据\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\");\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取商品分类数据失败！\");\n      }\n\n      this.catelist = res.data;\n    },\n    handleChange() {\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = [];\n      }\n    },\n    beforeTabLeave(activeName, oldActiveName) {\n      if (oldActiveName === \"0\" && this.addForm.goods_cat.length !== 3) {\n        this.$message.error(\"请选择商品分类！\");\n        return false;\n      }\n    },\n    async tabClicked() {\n      // 证明访问的是动态参数面板\n      if (this.activeIndex === \"1\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"many\" }\n          }\n        );\n\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取动态参数失败！\");\n        }\n\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(\" \");\n        });\n        this.manyTabData = res.data;\n      } else if (this.activeIndex === \"2\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"only\" }\n          }\n        );\n\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取静态属性失败！\");\n        }\n\n        this.onlyTabData = res.data;\n      }\n    },\n    // 处理图片预览效果\n    handlePreview(file) {\n      this.previewPath = file.response.data.url;\n      this.previewVisible = true\n    },\n    // 删除图片处理\n    handleRemove(file) {\n      // 1. 获取到将要删除到图片临时路径\n      const filePath = file.response.tmp_path;\n      // 2. 从pics 数组中，找到这个图片对应到索引值\n      const i = this.addForm.pics.findIndex(item => item.pic === filePath);\n      // 3. 调用数组到splice 方法 删除对应到图片信息\n      this.addForm.pics.splice(i, 1);\n    },\n    // 监听图片上传成功的事件\n    handleSuccess(response) {\n      // 1 先拼接得到图片信息对象\n      const picInfo = { pic: response.data.tmp_path };\n      // 2 将图片信息 push到pics数组中\n      this.addForm.pics.push(picInfo);\n    },\n    // 添加商品\n    add() {\n      this.$refs.addFormRef.validate(async valid => {\n        if(!valid) {\n          return this.$message.error('请填写必要的表单项！')\n        }\n        // 执行业务逻辑\n        const form = _.cloneDeep(this.addForm)\n\n        form.goods_cat = form.goods_cat.join(',')\n\n        // 处理动态参数\n        this.manyTabData.forEach(item => {\n          const newInfo = { attr_id : item.attr_id, attr_value : item.attr_vals.join(' ') }\n          this.addForm.attrs.push(newInfo)\n        })\n        // 处理静态属性\n        this.onlyTabData.forEach(item => {\n          const newInfo = { attr_id : item.attr_id, attr_value : item.attr_vals } \n          this.addForm.attrs.push(newInfo)\n        })\n        form.attrs = this.addForm.attrs\n\n        // 发起请求添加商品\n        const {data : res } = await this.$http.post('goods', form)\n        if(res.meta.status !== 201) {\n          return this.$message.error('添加商品失败！')\n        }\n        this.$message.success('添加商品成功！')\n\n        this.$router.push('/goods')\n      })\n    }\n  },\n  computed: {\n    cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2];\n      }\n      return null;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.el-checkbox {\n  margin: 0 5px 0 !important;\n}\n.previewImg{\n  width: 100%;\n}\n.btnAdd{\n  margin-top: 15px;\n}\n</style>"],"sourceRoot":"src/components/goods"}]}