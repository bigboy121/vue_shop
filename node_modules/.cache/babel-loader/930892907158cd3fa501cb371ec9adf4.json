{"remainingRequest":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Cate.vue","mtime":1587549614000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587711861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587711876000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2FwcGxlL0Rlc2t0b3AvXHU5RUQxXHU5QTZDXHU3NTM1XHU1NTQ2L3Z1ZV9zaG9wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDYXRlIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5p+l6K+i5pWw5o2u55qE5p2h5Lu2CiAgICAgIHF1ZXJ5SW5mbzogewogICAgICAgIHR5cGU6IDMsCiAgICAgICAgcGFnZW51bTogMSwKICAgICAgICBwYWdlc2l6ZTogNQogICAgICB9LAogICAgICAvLyDllYblk4HliIbnsbvnmoTmlbDmja7liJfooajvvIzpu5jorqTkuLrnqboKICAgICAgY2F0ZUxpc3Q6IFtdLAogICAgICAvLyDmgLvmlbDmja7mnaHmlbAKICAgICAgdG90YWw6IDAsCiAgICAgIC8vIOS4unRhYmxl5oyH5a6a5YiX55qE5a6a5LmJCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgbGFiZWw6ICLliIbnsbvlkI3np7AiLAogICAgICAgIHByb3A6ICJjYXRfbmFtZSIKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAi5piv5ZCm5pyJ5pWIIiwKICAgICAgICAvLyDooajnpLrlsIblvZPliY3lrprkuYnkuLrmqKHmnb/liJcKICAgICAgICB0eXBlOiAidGVtcGxhdGUiLAogICAgICAgIC8vIOihqOekuuW9k+WJjei/meS4gOWIl+S9v+eUqOaooeadv+WQjeensAogICAgICAgIHRlbXBsYXRlOiAiaXNvayIKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAi5o6S5bqPIiwKICAgICAgICAvLyDooajnpLrlsIblvZPliY3lrprkuYnkuLrmqKHmnb/liJcKICAgICAgICB0eXBlOiAidGVtcGxhdGUiLAogICAgICAgIC8vIOihqOekuuW9k+WJjei/meS4gOWIl+S9v+eUqOaooeadv+WQjeensAogICAgICAgIHRlbXBsYXRlOiAib3JkZXIiCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogIuaTjeS9nCIsCiAgICAgICAgLy8g6KGo56S65bCG5b2T5YmN5a6a5LmJ5Li65qih5p2/5YiXCiAgICAgICAgdHlwZTogInRlbXBsYXRlIiwKICAgICAgICAvLyDooajnpLrlvZPliY3ov5nkuIDliJfkvb/nlKjmqKHmnb/lkI3np7AKICAgICAgICB0ZW1wbGF0ZTogIm9wdCIKICAgICAgfV0sCiAgICAgIC8vIOaOp+WItuWIhuexu+WvueivneahhueahOaYvuekuuS4jumakOiXjwogICAgICBhZGRDYXRlRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIC8vIOa3u+WKoOWIhuexu+ihqOWNleaVsOaNruWvueixoQogICAgICBhZGRDYXRlRm9ybTogewogICAgICAgIC8vIOWwhuimgea3u+WKoOeahOWIhuexu+WQjeensAogICAgICAgIGNhdF9uYW1lOiAnJywKICAgICAgICAvLyDniLbnuqfliIbnsbtpZCDlv4XloasKICAgICAgICBjYXRfcGlkOiAwLAogICAgICAgIC8vIOWIhuexu+etiee6pyDpu5jorqTmt7vliqDnmoTmmK/kuIDnuqcKICAgICAgICBjYXRfbGV2ZWw6IDAKICAgICAgfSwKICAgICAgLy8g5re75Yqg6KGo5Y2V55qE6aqM6K+B6KeE5YiZ5a+56LGhCiAgICAgIGFkZENhdGVGb3JtUnVsZXM6IHsKICAgICAgICBjYXRfbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeWIhuexu+WQjeensCIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XQogICAgICB9LAogICAgICAvLyDniLbnuqfliIbnsbvnmoTliJfooagKICAgICAgcGFyZW50Q2F0ZUxpc3Q6IFtdLAogICAgICAvLyDmjIflrprnuqfogZTpgInmi6nlmajnmoTphY3nva7lr7nosaEKICAgICAgLy8gY2FzZWFkZXJQcm9wczogewogICAgICAvLyAgIHZhbHVlOiAnY2F0X2lkJywKICAgICAgLy8gICBsYWJlbDogJ2NhdF9uYW1lJywKICAgICAgLy8gICBjaGlsZHJlbjogJ2NoaWxkcmVuJwogICAgICAvLyB9LAogICAgICAvLyDpgInkuK3nmoTniLbnuqfliIbnsbtpZOaVsOe7hAogICAgICBzZWxlY3RlZEtleXM6IFtdLAogICAgICAvLyDmjqfliLbmmL7npLrkv67mlLnliIbnsbvkv6Hmga/lr7nor53moYbmmL7npLoKICAgICAgZWRpdERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAvLyDnvJbovpHliIbnsbvnmoTmlbDmja4KICAgICAgZWRpdENhdGVGb3JtOiB7CiAgICAgICAgY2F0X2lkOiAnJywKICAgICAgICBjYXRfbmFtZTogJycKICAgICAgfSAvLyDnvJbovpHliIbnsbvpqozor4Hop4TliJkKICAgICAgLy8gZWRpdEZvcm1SdWxlczogewogICAgICAvLyAgIGNhdGVOYW1lOiBbCiAgICAgIC8vICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5YiG57G75ZCN56ewIiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgLy8gICBdCiAgICAgIC8vIH0KCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluWVhuWTgeaVsOaNrgogICAgdGhpcy5nZXRDYXRlTGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5ZWG5ZOB5pWw5o2uCiAgICBnZXRDYXRlTGlzdDogZnVuY3Rpb24gZ2V0Q2F0ZUxpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfeWllbGQkX3RoaXMkJGh0dHAkZ2UsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KCJjYXRlZ29yaWVzIiwgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IF90aGlzLnF1ZXJ5SW5mbwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkaHR0cCRnZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMkJGh0dHAkZ2UuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiRtZXNzYWdlLmVycm9yKCLojrflj5bllYblk4HliIbnsbvlpLHotKXvvIEiKSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIC8vIOaKiuaVsOaNruWIl+ihqOi1i+WAvAogICAgICAgICAgICAgICAgX3RoaXMuY2F0ZUxpc3QgPSByZXMuZGF0YS5yZXN1bHQ7IC8vIOS4uuaAu+aVsOaNruadoeaVsOi1i+WAvAoKICAgICAgICAgICAgICAgIF90aGlzLnRvdGFsID0gcmVzLmRhdGEudG90YWw7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDnm5HlkKxwYWdlU2l6ZeaUueWPmOeahOS6i+S7tgogICAgaGFuZGxlU2l6ZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2l6ZUNoYW5nZShuZXdTaXplKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLnBhZ2VzaXplID0gbmV3U2l6ZTsKICAgICAgdGhpcy5nZXRDYXRlTGlzdCgpOwogICAgfSwKICAgIC8vIOebkeWQrHBhZ2VudW3nmoTmlLnlj5gKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUN1cnJlbnRDaGFuZ2UobmV3UGFnZSkgewogICAgICB0aGlzLnF1ZXJ5SW5mby5wYWdlbnVtID0gbmV3UGFnZTsKICAgICAgdGhpcy5nZXRDYXRlTGlzdCgpOwogICAgfSwKICAgIC8vIOeCueWHu+aMiemSriDmmL7npLrmt7vliqDliIbnsbvlr7nor53moYYKICAgIHNob3dBZGRDYXRlRGlhbG9nOiBmdW5jdGlvbiBzaG93QWRkQ2F0ZURpYWxvZygpIHsKICAgICAgLy8g5YWI6I635Y+W5pWw5o2uIOWGjeWxleekugogICAgICB0aGlzLmdldFBhcmVudENhdGVMaXN0KCk7CiAgICAgIHRoaXMuYWRkQ2F0ZURpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIC8vIOiOt+WPlueItue6p+WIhuexu+aVsOaNrueahOWIl+ihqAogICAgZ2V0UGFyZW50Q2F0ZUxpc3Q6IGZ1bmN0aW9uIGdldFBhcmVudENhdGVMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBfeWllbGQkX3RoaXMyJCRodHRwJGcsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGh0dHAuZ2V0KCdjYXRlZ29yaWVzJywgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAyCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMyJCRodHRwJGcgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczIkJGh0dHAkZy5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPlueItue6p+WIhuexu+aVsOaNruWksei0pe+8gScpKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3RoaXMyLnBhcmVudENhdGVMaXN0ID0gcmVzLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOmAieaLqemhueWPkeeUn+WPmOWMluinpuWPkei/meS4quWHveaVsAogICAgcGFyZW50Q2F0ZUNoYW5nZWQ6IGZ1bmN0aW9uIHBhcmVudENhdGVDaGFuZ2VkKCkgewogICAgICAvLyDlpoLmnpwgc2VsZWN0ZWRLZXlzIOaVsOe7hOS4reeahCBsZW5ndGgg5aSn5LqOMCDor4HmmI7pgInkuK3nmoTniLbnuqfliIbnsbsKICAgICAgLy8g5Y+N5LmL77yM5bCx6K+05piO5rKh5pyJ6YCJ5oup5Lu75L2V54i257qn5YiG57G7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkS2V5cy5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8g5YiG57G7aWQKICAgICAgICB0aGlzLmFkZENhdGVGb3JtLmNhdF9waWQgPSB0aGlzLnNlbGVjdGVkS2V5c1t0aGlzLnNlbGVjdGVkS2V5cy5sZW5ndGggLSAxXTsgLy8g5YiG57G7562J57qnCgogICAgICAgIHRoaXMuYWRkQ2F0ZUZvcm0uY2F0X2xldmVsID0gdGhpcy5zZWxlY3RlZEtleXMubGVuZ3RoOwogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmFkZENhdGVGb3JtLmNhdF9waWQgPSAwOwogICAgICAgIHRoaXMuYWRkQ2F0ZUZvcm0uY2F0X2xldmVsID0gMDsKICAgICAgfQogICAgfSwKICAgIC8vIOeCueWHu+ehruWumuaMiemSru+8jOa3u+WKoOaWsOeahOWIhuexuwogICAgYWRkQ2F0ZTogZnVuY3Rpb24gYWRkQ2F0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmFkZENhdGVGb3JtUmVmLnZhbGlkYXRlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh2YWxpZCkgewogICAgICAgICAgdmFyIF95aWVsZCRfdGhpczMkJGh0dHAkcCwgcmVzOwoKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLiRodHRwLnBvc3QoJ2NhdGVnb3JpZXMvJywgX3RoaXMzLmFkZENhdGVGb3JtKTsKCiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczMkJGh0dHAkcCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMzJCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAxKSkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF90aGlzMy4kbWVzc2FnZS5lcnJvcign5re75Yqg5YiG57G75aSx6LSl77yBJykpOwoKICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+a3u+WKoOWIhuexu+aIkOWKn++8gScpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMzLmdldENhdGVMaXN0KCk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuYWRkQ2F0ZURpYWxvZ1Zpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9LAogICAgLy8g55uR5ZCs5a+56K+d5qGG5YWz6Zet77yM6YeN572u5pWw5o2uCiAgICBhZGRDYXRlRGlhbG9nQ2xvc2VkOiBmdW5jdGlvbiBhZGRDYXRlRGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLiRyZWZzLmFkZENhdGVGb3JtUmVmLnJlc2V0RmllbGRzKCk7CiAgICAgIHRoaXMuc2VsZWN0ZWRLZXlzID0gW107CiAgICAgIHRoaXMuYWRkQ2F0ZUZvcm0uY2F0X2xldmVsID0gMDsKICAgICAgdGhpcy5hZGRDYXRlRm9ybS5jYXRfcGlkID0gMDsKICAgIH0sCiAgICAvLyDnm5HlkKznvJbovpHmjInpkq7ngrnlh7sKICAgIGVkaXRDYXRlOiBmdW5jdGlvbiBlZGl0Q2F0ZShyb3cpIHsKICAgICAgLy8g5bCG6YCJ5Lit55qE5pWw5o2u5L+d5a2YCiAgICAgIHRoaXMuZWRpdENhdGVGb3JtLmNhdF9pZCA9IHJvdy5jYXRfaWQ7CiAgICAgIHRoaXMuZWRpdENhdGVGb3JtLmNhdF9uYW1lID0gcm93LmNhdF9uYW1lOyAvLyDmmL7npLrlr7nor53moYYKCiAgICAgIHRoaXMuZWRpdERpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIC8vIOebkeWQrOe8lui+keWIhuexu+ehruWumuaMiemSrueCueWHuwogICAgZWRpdENhdGVJbmZvOiBmdW5jdGlvbiBlZGl0Q2F0ZUluZm8oKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczQkJGh0dHAkcCwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC4kaHR0cC5wdXQoJ2NhdGVnb3JpZXMvJyArIF90aGlzNC5lZGl0Q2F0ZUZvcm0uY2F0X2lkLCB7CiAgICAgICAgICAgICAgICAgIGNhdF9uYW1lOiBfdGhpczQuZWRpdENhdGVGb3JtLmNhdF9uYW1lCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNCQkaHR0cCRwID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM0JCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX3RoaXM0LiRtZXNzYWdlLmVycm9yKCfkv67mlLnliIbnsbvmlbDmja7lpLHotKXvvIEnKSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZS5zdWNjZXNzKCfkv67mlLnliIbnsbvmlbDmja7miJDlip/vvIEnKTsKCiAgICAgICAgICAgICAgICBfdGhpczQuZ2V0Q2F0ZUxpc3QoKTsKCiAgICAgICAgICAgICAgICBfdGhpczQuZWRpdENhdGVGb3JtLmNhdF9pZCA9ICcnOwogICAgICAgICAgICAgICAgX3RoaXM0LmVkaXRDYXRlRm9ybS5jYXRfbmFtZSA9ICcnOwogICAgICAgICAgICAgICAgX3RoaXM0LmVkaXREaWFsb2dWaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDnm5HlkKzliKDpmaTliIbnsbvmlbDmja7mjInpkq4KICAgIHNlbGVjdENhdGU6IGZ1bmN0aW9uIHNlbGVjdENhdGUoaWQpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgY29uZmlybVJlc3VsdCwgX3lpZWxkJF90aGlzNSQkaHR0cCRkLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XliIbnsbssIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycjsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjb25maXJtUmVzdWx0ID0gX2NvbnRleHQ1LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEoY29uZmlybVJlc3VsdCAhPT0gImNvbmZpcm0iKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBfdGhpczUuJG1lc3NhZ2UuaW5mbygi5Y+W5raI5Yig6Zmk77yBIikpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LiRodHRwWyJkZWxldGUiXSgnY2F0ZWdvcmllcy8nICsgaWQpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXM1JCRodHRwJGQgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczUkJGh0dHAkZC5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgX3RoaXM1LiRtZXNzYWdlLmVycm9yKCLliKDpmaTliIbnsbvlpLHotKXvvIEiKSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfdGhpczUuJG1lc3NhZ2Uuc3VjY2Vzcygi5Yig6Zmk5YiG57G75oiQ5Yqf77yBIik7CgogICAgICAgICAgICAgICAgX3RoaXM1LmdldENhdGVMaXN0KCk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 表格 -->\n      <tree-table\n        class=\"tree-table\"\n        :data=\"cateList\"\n        :columns=\"columns\"\n        :selection-type=\"false\"\n        :expand-type=\"false\"\n        show-index\n        index-text=\"#\"\n        border\n      >\n      <!-- 是否有效 -->\n      <template slot=\"isok\" slot-scope=\"scope\">\n          <i\n            class=\"el-icon-success\"\n            v-if=\"scope.row.cat_deleted === false\"\n            style=\"color: lightgreen;\"\n          ></i>\n          <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\n      </template>\n\n      <!-- 排序 -->\n      <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\n          <el-tag size=\"mini\" v-else-if=\"scope.row.cat_level === 1\" type='success'>二级</el-tag>\n          <el-tag size=\"mini\" v-else type=\"warning\">三级</el-tag>\n      </template size=\"mini\">\n\n      <!-- 操作 -->\n      <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"editCate(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"selectCate(scope.row.cat_id)\">删除</el-button>\n      </template>\n\n      \n      </tree-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"queryInfo.pagenum\"\n      :page-sizes=\"[5, 10, 15, 20]\"\n      :page-size=\"queryInfo.pagesize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!-- 添加分类的对话框 -->\n    <el-dialog\n      title=\"添加分类\"\n      :visible.sync=\"addCateDialogVisible\"\n      width=\"50%\"\n      @close=\"addCateDialogClosed\"\n    >\n      <!-- 添加分类的表单 -->\n      <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类：\">\n          <!-- options 指定数据源 -->\n          <!-- caseaderProps 用来指定对象 -->\n           <el-cascader\n            v-model=\"selectedKeys\"\n            :options=\"parentCateList\"\n            :props=\"{ expandTrigger: 'hover', value: 'cat_id', label: 'cat_name', children: 'children' }\"\n            @change=\"parentCateChanged\"\n            clearable\n            change-on-select></el-cascader>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑／修改分类对话框 -->\n    <el-dialog\n      title=\"修改分类\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\">\n      <el-form :model=\"editCateForm\" :rules=\"addCateFormRules\" ref=\"editCateFormRef\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editCateInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Cate\",\n  data() {\n    return {\n      // 查询数据的条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类的数据列表，默认为空\n      cateList: [],\n      // 总数据条数\n      total: 0,\n      // 为table指定列的定义\n      columns: [\n        {\n          label: \"分类名称\",\n          prop: \"cat_name\"\n        },\n        {\n          label: \"是否有效\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"isok\"\n        },\n        {\n          label: \"排序\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"order\"\n        },\n        {\n          label: \"操作\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"opt\"\n        }\n      ],\n      // 控制分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      // 添加分类表单数据对象\n      addCateForm: {\n        // 将要添加的分类名称\n        cat_name: '',\n        // 父级分类id 必填\n        cat_pid: 0,\n        // 分类等级 默认添加的是一级\n        cat_level: 0,\n      },\n      // 添加表单的验证规则对象\n      addCateFormRules: {\n        cat_name: [\n           { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\n        ]\n      },\n      // 父级分类的列表\n      parentCateList: [],\n      // 指定级联选择器的配置对象\n      // caseaderProps: {\n      //   value: 'cat_id',\n      //   label: 'cat_name',\n      //   children: 'children'\n      // },\n      // 选中的父级分类id数组\n      selectedKeys:[],\n      // 控制显示修改分类信息对话框显示\n      editDialogVisible: false,\n      // 编辑分类的数据\n      editCateForm: {\n        cat_id: '',\n        cat_name: ''\n      },\n      // 编辑分类验证规则\n      // editFormRules: {\n      //   cateName: [\n      //     { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\n      //   ]\n      // }\n    };\n  },\n  created() {\n    // 获取商品数据\n    this.getCateList();\n  },\n  methods: {\n    // 获取商品数据\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\", {\n        params: this.queryInfo\n      });\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取商品分类失败！\");\n      }\n\n      // 把数据列表赋值\n      this.cateList = res.data.result;\n\n      // 为总数据条数赋值\n      this.total = res.data.total;\n    },\n    // 监听pageSize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getCateList();\n    },\n    // 监听pagenum的改变\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getCateList();\n    },\n    // 点击按钮 显示添加分类对话框\n    showAddCateDialog() {\n      // 先获取数据 再展示\n      this.getParentCateList()\n      this.addCateDialogVisible = true\n      \n    },\n    // 获取父级分类数据的列表\n    async getParentCateList() {\n      const {data : res} = await this.$http.get('categories', {\n        params: { type: 2}\n      })\n      if(res.meta.status !== 200) {\n        return this.$message.error('获取父级分类数据失败！')\n      }\n      this.parentCateList = res.data\n    },\n    // 选择项发生变化触发这个函数\n    parentCateChanged() {\n      // 如果 selectedKeys 数组中的 length 大于0 证明选中的父级分类\n      // 反之，就说明没有选择任何父级分类\n      if(this.selectedKeys.length >0) {\n        // 分类id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n        // 分类等级\n        this.addCateForm.cat_level = this.selectedKeys.length\n        return\n      }else {\n         this.addCateForm.cat_pid = 0\n        this.addCateForm.cat_level = 0\n      }\n    },\n    // 点击确定按钮，添加新的分类\n    addCate() {\n      this.$refs.addCateFormRef.validate(async valid => {\n        if(!valid) return\n        const {data : res} = await this.$http.post('categories/', this.addCateForm)\n        if(res.meta.status !== 201) {\n          return this.$message.error('添加分类失败！')\n        }\n        this.$message.success('添加分类成功！')\n        this.getCateList()\n        this.addCateDialogVisible = false\n      })\n    },\n    // 监听对话框关闭，重置数据\n    addCateDialogClosed() {\n      this.$refs.addCateFormRef.resetFields()\n      this.selectedKeys = []\n      this.addCateForm.cat_level = 0\n      this.addCateForm.cat_pid = 0\n    },\n    // 监听编辑按钮点击\n    editCate(row) {\n      // 将选中的数据保存\n      this.editCateForm.cat_id = row.cat_id\n      this.editCateForm.cat_name = row.cat_name\n\n      // 显示对话框\n      this.editDialogVisible = true\n    },\n    // 监听编辑分类确定按钮点击\n    async editCateInfo() {\n      const { data : res } = await this.$http.put('categories/' + this.editCateForm.cat_id, {\n        cat_name: this.editCateForm.cat_name\n      })\n\n      if(res.meta.status !== 200) {\n        return this.$message.error('修改分类数据失败！')\n      }\n\n      this.$message.success('修改分类数据成功！')\n\n\n      this.getCateList()\n\n      this.editCateForm.cat_id = ''\n      this.editCateForm.cat_name = ''\n\n      this.editDialogVisible = false\n    },\n    // 监听删除分类数据按钮\n    async selectCate(id) {\n      \n      const confirmResult = await this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"取消删除！\");\n      }\n\n      const { data: res } = await this.$http.delete('categories/'+ id)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除分类失败！\")\n      }\n\n      this.$message.success(\"删除分类成功！\")\n      \n      this.getCateList()\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.tree-table {\n  margin-top: 15px;\n}\n.el-cascader {\n  width: 100%;\n}\n</style>"],"sourceRoot":"src/components/goods"}]}