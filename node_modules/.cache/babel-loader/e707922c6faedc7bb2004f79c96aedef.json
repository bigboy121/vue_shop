{"remainingRequest":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/thread-loader/dist/cjs.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Params.vue","mtime":1587629150000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/thread-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <!-- 警告信息区 -->\n      <el-alert title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" show-icon :closable=\"false\"></el-alert>\n\n      <!-- 选择商品分类区域 -->\n      <el-row class=\"cat_opt\">\n        <el-col>\n          <span>选择商品分类：</span>\n          <!-- 选择商品分类的级联选择框 -->\n          <el-cascader\n            v-model=\"selectedCateKeys\"\n            :options=\"cateList\"\n            :props=\"{ expandTrigger: 'hover',value:'cat_id',label:'cat_name',children:'children' }\"\n            @change=\"handleChange\"\n          ></el-cascader>\n        </el-col>\n        <!-- tab 页签区域 -->\n        <el-col>\n          <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\n            <!-- 添加动态参数的面板 -->\n            <el-tab-pane label=\"动态参数\" name=\"many\">\n              <!-- 添加参数按钮 -->\n              <el-button\n                type=\"primary\"\n                size=\"mini\"\n                :disabled=\"isBtnDisabled\"\n                @click=\"addDialogVisible = true\"\n              >添加参数</el-button>\n              <!-- 动态参数表格 -->\n              <el-table :data=\"manyTableData\" border stripe>\n                <!-- 展开行 -->\n                <el-table-column type=\"expand\">\n                  <template slot-scope=\"scope\">\n                    <!-- 循环渲染tag标签 -->\n                    <el-tag\n                      v-for=\"(item,i) in scope.row.attr_vals\"\n                      :key=\"i\"\n                      closable\n                      @close=\"handleClose(i,scope.row)\"\n                    >{{item}}</el-tag>\n                    <!-- 输入文本库 -->\n                    <el-input\n                      class=\"input-new-tag\"\n                      v-if=\"scope.row.inputVisible\"\n                      v-model=\"scope.row.inputValue\"\n                      ref=\"saveTagInput\"\n                      size=\"small\"\n                      @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                      @blur=\"handleInputConfirm(scope.row)\"\n                    ></el-input>\n                    <!-- 添加按钮 -->\n                    <el-button\n                      v-else\n                      class=\"button-new-tag\"\n                      size=\"small\"\n                      @click=\"showInput(scope.row)\"\n                    >+ New Tag</el-button>\n                  </template>\n                </el-table-column>\n                <!-- 索引列 -->\n                <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\n                <el-table-column label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button\n                      type=\"primary\"\n                      icon=\"el-icon-edit\"\n                      size=\"mini\"\n                      @click=\"showEditDialog(scope.row.attr_id)\"\n                    >修改</el-button>\n                    <el-button\n                      type=\"danger\"\n                      icon=\"el-icon-delete\"\n                      size=\"mini\"\n                      @click=\"removeParams(scope.row.attr_id)\"\n                    >删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </el-tab-pane>\n            <!-- 添加静态属性的面板 -->\n            <el-tab-pane label=\"静态属性\" name=\"only\">\n              <!-- 添加属性按钮 -->\n              <el-button\n                type=\"primary\"\n                size=\"mini\"\n                :disabled=\"isBtnDisabled\"\n                @click=\"addDialogVisible = true\"\n              >添加属性</el-button>\n\n              <!-- 静态参数表格 -->\n              <el-table :data=\"onlyTableData\" border stripe>\n                <!-- 展开行 -->\n                <el-table-column type=\"expand\">\n                  <template slot-scope=\"scope\">\n                    <!-- 循环渲染tag标签 -->\n                    <el-tag\n                      v-for=\"(item,i) in scope.row.attr_vals\"\n                      :key=\"i\"\n                      closable\n                      @close=\"handleClose(i,scope.row)\"\n                    >{{item}}</el-tag>\n                    <!-- 输入文本库 -->\n                    <el-input\n                      class=\"input-new-tag\"\n                      v-if=\"scope.row.inputVisible\"\n                      v-model=\"scope.row.inputValue\"\n                      ref=\"saveTagInput\"\n                      size=\"small\"\n                      @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                      @blur=\"handleInputConfirm(scope.row)\"\n                    ></el-input>\n                    <!-- 添加按钮 -->\n                    <el-button\n                      v-else\n                      class=\"button-new-tag\"\n                      size=\"small\"\n                      @click=\"showInput(scope.row)\"\n                    >+ New Tag</el-button>\n                  </template>\n                </el-table-column>\n                <!-- 索引列 -->\n                <el-table-column type=\"index\" label=\"#\"></el-table-column>\n                <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\n                <el-table-column label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button\n                      type=\"primary\"\n                      icon=\"el-icon-edit\"\n                      size=\"mini\"\n                      @click=\"showEditDialog(scope.row.attr_id)\"\n                    >修改</el-button>\n                    <el-button\n                      type=\"danger\"\n                      icon=\"el-icon-delete\"\n                      size=\"mini\"\n                      @click=\"removeParams(scope.row.attr_id)\"\n                    >删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </el-tab-pane>\n          </el-tabs>\n        </el-col>\n      </el-row>\n    </el-card>\n\n    <!-- 添加参数的对话框 -->\n    <el-dialog\n      :title=\"'添加' + titleText\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <!-- 验证表单 -->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\n          <el-input v-model=\"addForm.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 修改参数的对话框 -->\n    <el-dialog\n      :title=\"'修改' + titleText\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <!-- 验证表单 -->\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\n          <el-input v-model=\"editForm.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Params\",\n  data() {\n    return {\n      // 商品列表数据\n      cateList: [],\n      // 级联选择框双向绑定到到数组\n      selectedCateKeys: [],\n      // 被激活的页签的名称\n      activeName: \"many\",\n      // 动态参数的数据\n      manyTableData: [],\n      // 静态参数的数据\n      onlyTableData: [],\n      // 控制添加对话框的显示隐藏\n      addDialogVisible: false,\n      // 添加参数的表单数据对象\n      addForm: {},\n      // 添加表单的验证规则\n      addFormRules: {\n        attr_name: [\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" }\n        ]\n      },\n      // 控制修改对话框的显示隐藏\n      editDialogVisible: false,\n      // 修改的表单数据对象\n      editForm: {},\n      // 添加修改表单的验证规则\n      editFormRules: {\n        attr_name: [\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取所有的商品分类列表\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\");\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取商品分类失败！\");\n      }\n\n      this.cateList = res.data;\n    },\n    // 级联选择框改变监听\n    handleChange() {\n      this.getParamsData();\n    },\n\n    // tab 页签点击事件到处理函数\n    handleTabClick() {\n      console.log(this.activeName);\n\n      this.getParamsData();\n    },\n    // 获取参数的列表数据\n    async getParamsData() {\n      // 判断是否选中为三级分类\n      if (this.selectedCateKeys.length !== 3) {\n        this.selectedCateKeys = [];\n        (this.manyTableData = []), (this.onlyTableData = []);\n        return;\n      }\n      // 证明选中到是三级分类\n      console.log(this.selectedCateKeys);\n\n      // 根据所选分类的id ，和当前所处的面板，获取对应的参数\n      const { data: res } = await this.$http.get(\n        `categories/${this.cateId}/attributes`,\n        {\n          params: { sel: this.activeName }\n        }\n      );\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取参数列表失败！\");\n      }\n\n      res.data.forEach(item => {\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\n        // 控制文本框的显示隐藏 自定义属性\n        item.inputVisible = false;\n        // 文本框输入的值\n        item.inputValue = \"\";\n      });\n\n      console.log(res.data);\n\n      if (this.activeName === \"many\") {\n        this.manyTableData = res.data;\n      } else {\n        this.onlyTableData = res.data;\n      }\n    },\n    // 监听对话框关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    // 确定按钮添加参数\n    addParams() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return;\n        const { data: res } = await this.$http.post(\n          `categories/${this.cateId}/attributes`,\n          {\n            attr_name: this.addForm.attr_name,\n            attr_sel: this.activeName\n          }\n        );\n\n        if (res.meta.status !== 201) {\n          return this.$message.error(\"添加参数失败！\");\n        }\n\n        this.$message.success(\"添加参数成功！\");\n        this.addDialogVisible = false;\n        this.getParamsData();\n      });\n    },\n    // 点击按钮 展示修改的对话框\n    async showEditDialog(attr_id) {\n      // 当寻当前的id信息\n      const { data: res } = await this.$http.get(\n        `categories/${this.cateId}/attributes/${attr_id}`,\n        {\n          params: { attr_sel: this.activeName }\n        }\n      );\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"查询参数信息失败！\");\n      }\n\n      this.editForm = res.data;\n\n      this.editDialogVisible = true;\n    },\n    // 重置表单\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    // 点击按钮修改参数发出请求\n    editParams() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return;\n        const { data: res } = await this.$http.put(\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\n          {\n            attr_name: this.editForm.attr_name,\n            attr_sel: this.activeName\n          }\n        );\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"修改参数失败！\");\n        }\n\n        this.$message.success(\"修改参数成功！\");\n        this.getParamsData();\n        this.editDialogVisible = false;\n      });\n    },\n    // 根据id删除对应的参数\n    async removeParams(attr_id) {\n      const configResult = await this.$confirm(\n        \"此操作将永久删除该参数, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => err);\n\n      // 用户取消\n      if (configResult !== \"confirm\") {\n        return this.$message.info(\"已取消删除！\");\n      }\n\n      // 确定选择删除参数\n      const { data: res } = await this.$http.delete(\n        `categories/${this.cateId}/attributes/${attr_id}`\n      );\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除参数失败！\");\n      }\n\n      this.$message.success(\"删除参数成功！\");\n      this.getParamsData();\n    },\n    // 文本框失去焦点 或者 enter 触发\n    async handleInputConfirm(row) {\n      if (row.inputValue.trim().length === 0) {\n        row.inputValue = \"\";\n        row.inputVisible = false;\n        return;\n      }\n\n      // 若无return 则添加\n      row.attr_vals.push(row.inputValue.trim());\n\n      row.inputValue = \"\";\n      row.inputVisible = false;\n\n      // 发起请求保存修改数据\n      this.saveAttrVals(row);\n    },\n    // 点击按钮 显示文本输入框\n    showInput(row) {\n      row.inputVisible = true;\n\n      // 文本框自动获得焦点\n      // nextTick 作用 当页面上元素被重新渲染之后，才会指定回调函数中的代码\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    // 删除对应的参数可选项\n    handleClose(i, row) {\n      row.attr_vals.splice(i, 1);\n\n      this.saveAttrVals(row);\n    },\n    async saveAttrVals(row) {\n      // 发起请求保存修改数据\n      const { data: res } = await this.$http.put(\n        `categories/${this.cateId}/attributes/${row.attr_id}`,\n        {\n          attr_name: row.attr_name,\n          attr_sel: row.attr_sel,\n          attr_vals: row.attr_vals.join(\" \")\n        }\n      );\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"修改参数项失败！\");\n      }\n\n      this.$message.success(\"修改参数项成功！\");\n    }\n  },\n  computed: {\n    // 计算当前选中的商品等级 非三级按钮需要被禁用， 符合返回true 反之false\n    isBtnDisabled() {\n      if (this.selectedCateKeys.length !== 3) {\n        return true;\n      }\n      return false;\n    },\n    // 当前选中的三级ID\n    cateId() {\n      if (this.selectedCateKeys.length === 3) {\n        return this.selectedCateKeys[2];\n      }\n      return null;\n    },\n    // 动态计算标题显示的文本\n    titleText() {\n      return this.activeName === \"many\" ? \"动态参数\" : \"静态属性\";\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.cat_opt {\n  margin: 15px 0;\n}\n.el-tag {\n  margin: 5px;\n}\n.input-new-tag {\n  width: 120px;\n}\n</style>"],"sourceRoot":"src/components/goods"}]}