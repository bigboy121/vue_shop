{"remainingRequest":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/power/Roles.vue?vue&type=style&index=0&id=60c9cab0&lang=less&scoped=true&","dependencies":[{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/power/Roles.vue","mtime":1587718863000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/css-loader/dist/cjs.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/postcss-loader/src/index.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/less-loader/dist/cjs.js","mtime":1587821895000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC10YWcgewogIG1hcmdpbjogN3B4Owp9Ci5iZHRvcCB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7Cn0KLmJkYm90dG9tIHsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTsKfQoudmNlbnRlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Cg=="},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Roles.vue","sourceRoot":"src/components/power","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 添加角色按钮区域 -->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"addRoleBtn\">添加角色</el-button>\n        </el-col>\n      </el-row>\n      <!-- 角色列表区域 -->\n      <el-table :data=\"roleList\" border stripe>\n        <!-- 展开列 -->\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"scope\">\n            <el-row\n              :class=\"['bdbottom',i1 === 0 ? 'bdtop' : '', 'vcenter']\"\n              v-for=\"(item1,i1) in scope.row.children\"\n              :key=\"item1.id\"\n            >\n              <!-- 渲染一级权限 -->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{item1.authName}}</el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!-- 渲染二级和三级权限 -->\n              <el-col :span=\"19\">\n                <!-- 通过foe循环 嵌套二级权限 -->\n                <el-row\n                  :class=\"[i2 === 0 ? '' : 'bdtop', 'vcenter']\"\n                  v-for=\"(item2, i2) in item1.children\"\n                  :key=\"item2.id\"\n                >\n                  <el-col :span=\"6\">\n                    <el-tag\n                      type=\"success\"\n                      closable\n                      @close=\"removeRightById(scope.row, item2.id)\"\n                    >{{item2.authName}}</el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <el-col :span=\"18\">\n                    <el-tag\n                      v-for=\"(item3, i3) in item2.children\"\n                      :key=\"item3.id\"\n                      type=\"warning\"\n                      closable\n                      @close=\"removeRightById(scope.row, item3.id)\"\n                    >{{item3.authName}}</el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template slot-scope=\"scope\">\n            <!-- 编辑按钮 -->\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              @click=\"showEditDialog(scope.row.id)\"\n            >编辑</el-button>\n            <!-- 删除按钮 -->\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"removeRolesById(scope.row.id)\"\n            >删除</el-button>\n            <!-- 分配权限按钮 -->\n            <el-button\n              size=\"mini\"\n              type=\"warning\"\n              icon=\"el-icon-setting\"\n              @click=\"showSetRightDialog(scope.row)\"\n            >分配权限</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- 添加用户对话框 -->\n    <el-dialog title=\"添加角色\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addRoleClosed\">\n      <!-- 内容主体区域 -->\n      <el-form :model=\"addFormRole\" :rules=\"addFormRules\" ref=\"addRoleRef\" label-width=\"80px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"addFormRole.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"addFormRole.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addRoleInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑用户对话框 -->\n    <el-dialog title=\"修改角色\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editRoleClosed\">\n      <!-- 内容主体区域 -->\n      <el-form :model=\"addFormRole\" :rules=\"addFormRules\" ref=\"editRoleRef\" label-width=\"80px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"addFormRole.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"addFormRole.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editRoleInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 分配权限对话框 -->\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"setRightDialogVisible\"\n      width=\"50%\"\n      @close=\"setRightDialogClosed\"\n    >\n      <!-- 树形控件 -->\n      <el-tree\n        :data=\"rightList\"\n        :props=\"treeProps\"\n        show-checkbox\n        node-key=\"id\"\n        :default-expand-all=\"true\"\n        :default-checked-keys=\"defKeys\"\n        ref=\"treeRef\"\n      ></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRight\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Roles\",\n  data() {\n    return {\n      // 所有角色列表数据\n      roleList: [],\n      // 是否显示添加角色对话框\n      addDialogVisible: false,\n      // 是否显示编辑角色对话框\n      editDialogVisible: false,\n      // 控制分配权限对话框\n      setRightDialogVisible: false,\n      // 添加角色数据\n      addFormRole: {\n        roleName: \"\",\n        roleDesc: \"\"\n      },\n      // 所有权限的数据\n      rightList: [],\n      // 树形控件的属性绑定对象\n      treeProps: {\n        label: \"authName\",\n        children: \"children\"\n      },\n      // 默认选中的节点ID值数组\n      defKeys: [],\n      // 当前即将分配权限的角色的id\n      roleId: \"\",\n      // 验证规则\n      addFormRules: {\n        roleName: [\n          { required: true, message: \"请输入角色名称\", trigger: \"blur\" }\n        ],\n        roleDesc: [\n          { required: true, message: \"请输入角色描述\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    // 获取所有角色的列表\n    this.getRolesList();\n  },\n  methods: {\n    // 获取所有角色的列表\n    async getRolesList() {\n      const { data: res } = await this.$http.get(\"roles\");\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取角色列表失败！\");\n      }\n\n      this.roleList = res.data;\n    },\n    // 监听添加角色按钮点击事件\n    addRoleBtn() {\n      this.addDialogVisible = true;\n    },\n    // 监听对话框关闭\n    addRoleClosed() {\n      this.$refs.addRoleRef.resetFields();\n      this.addDialogVisible = false;\n    },\n    // 监听确定添加角色按钮点击\n    addRoleInfo() {\n      this.$refs.addRoleRef.validate(async valid => {\n        if (!valid) {\n          return;\n        }\n        // 发起添加角色的网络请求\n        const { data: res } = await this.$http.post(\"roles\", this.addFormRole);\n        if (res.meta.status !== 201) {\n          return this.$message.error(\"添加角色失败！\");\n        }\n\n        this.$message.success(\"添加角色成功！\");\n        this.addDialogVisible = false;\n        this.getRolesList();\n      });\n    },\n    // 监听编辑按钮点击\n    async showEditDialog(id) {\n      this.editDialogVisible = true;\n      const { data: res } = await this.$http.get(\"roles/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"查询角色信息失败!\");\n      }\n      this.addFormRole = res.data;\n    },\n    // 监听 编辑对话框 确定按钮\n    editRoleInfo() {\n      this.$refs.editRoleRef.validate(async valid => {\n        if (!valid) return;\n        const { data: res } = await this.$http.put(\n          \"roles/\" + this.addFormRole.roleId,\n          {\n            roleName: this.addFormRole.roleName,\n            roleDesc: this.addFormRole.roleDesc\n          }\n        );\n        console.log(res);\n\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"更新角色信息失败！\");\n        }\n        // 关闭对话框\n        this.editDialogVisible = false;\n        // 刷新数据列表\n        this.getRolesList();\n        // 提示修改成功\n        this.$message.success(\"更新用户信息成功！\");\n      });\n    },\n    // 监听对话框关闭\n    editRoleClosed() {\n      this.$refs.editRoleRef.resetFields();\n      this.editDialogVisible = false;\n    },\n    // 监听删除按钮的点击\n    async removeRolesById(id) {\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该角色, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => err);\n\n      // 如果用户确认删除 返回文本字符串 confirm\n      // 如果用户取消删除 返回文本字符串 cancel\n\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"取消用户删除！\");\n      }\n      const { data: res } = await this.$http.delete(\"roles/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.erroe(\"删除用户失败！\");\n      }\n      this.$message.success(\"完成用户删除！\");\n      this.getRolesList();\n    },\n    // 根据id删除对应的权限\n    async removeRightById(role, rightId) {\n      // 弹框是否删除\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该文件, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => err);\n\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"取消删除！\");\n      }\n      const { data: res } = await this.$http.delete(\n        `roles/${role.id}/rights/${rightId}`\n      );\n      if (res.meta.status !== 200) {\n        return this.$message.erroe(\"删除权限失败！\");\n      }\n      // this.$message.success(\"完成权限删除！\");\n      // 防止列表刷新 赋值数据 不调用网络请求\n      role.children = res.data;\n    },\n    // 展示分配权限的对话框\n    async showSetRightDialog(role) {\n      this.roleId = role.id;\n\n      // 获取所有权限的数据\n      const { data: res } = await this.$http.get(\"rights/tree\");\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取权限数据失败！\");\n      }\n      // 获取到的权限数据保存到data中\n      this.rightList = res.data;\n      console.log(this.rightList);\n\n      // 递归当前三级权限的id\n      this.getLeafKty(role, this.defKeys);\n\n      this.setRightDialogVisible = true;\n    },\n    // 通过递归的形式， 获取角色下所有的三级权限的id 保存到defKets\n    getLeafKty(node, arr) {\n      // 如果当前node 节点不包含children属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id);\n      }\n      node.children.forEach(item => this.getLeafKty(item, arr));\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed() {\n      this.defKeys = [];\n    },\n    // 点击为角色分配权限\n    async allotRight() {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ];\n\n      const idStr = keys.join(\",\");\n\n      const { data: res } = await this.$http.post(\n        `roles/${this.roleId}/rights`,\n        { rids: idStr }\n      );\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"分配角色权限失败！\");\n      }\n\n      this.$message.success(\"分配角色权限成功！\");\n\n      this.getRolesList();\n\n      this.setRightDialogVisible = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n}\n.bdtop {\n  border-top: 1px solid #eee;\n}\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>"]}]}