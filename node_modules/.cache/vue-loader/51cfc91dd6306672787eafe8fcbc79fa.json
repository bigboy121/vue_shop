{"remainingRequest":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/Login.vue?vue&type=style&index=0&id=0eca335d&lang=less&scoped=true&","dependencies":[{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/Login.vue","mtime":1587181987000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/css-loader/dist/cjs.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/postcss-loader/src/index.js","mtime":1587821881000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/less-loader/dist/cjs.js","mtime":1587821895000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2dpbl9jb250YWluZXIgewogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmI0YjZiOwp9Ci5sb2dpbl9ib3ggewogIHdpZHRoOiA0NTBweDsKICBoZWlnaHQ6IDMwMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA1MCU7CiAgdG9wOiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CgogIC5hdmF0YXJfYm94IHsKICAgIHdpZHRoOiAxMzBweDsKICAgIGhlaWdodDogMTMwcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcGFkZGluZzogMTBweDsKICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4ICNlZWU7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmOwogICAgaW1nIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIGhlaWdodDogMTAwJTsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOwogICAgfQogIH0KfQoKLmxvZ2luX2Zvcm0gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDA7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMCAyMHB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCi5idG5zIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!-- 头像区域 -->\n      <div class=\"avatar_box\">\n        <img src=\"../assets/logo.png\" alt />\n      </div>\n      <!-- 登陆表单区域 -->\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"0px\" class=\"login_form\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            prefix-icon=\"iconfont icon-3702mima\"\n            type=\"password\"\n          ></el-input>\n        </el-form-item>\n        <!-- 按钮区 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登陆</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 这是登陆表单的数据绑定对象\n      loginForm: {\n        username: \"admin\",\n        password: \"123456\"\n      },\n      // 表单的验证规则\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [\n          { required: true, message: \"请输入登陆账号\", trigger: \"blur\" },\n          { min: 3, max: 10, message: \"长度在 3 到 10 个字符\", trigger: \"blur\" }\n        ],\n        // 验证密码是否合法\n        password: [\n          { required: true, message: \"请输入登陆密码\", trigger: \"blur\" },\n          { min: 6, max: 15, message: \"长度在 6 到 15 个字符\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 点击重置按钮 重置表单\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields()\n    },\n    // 登陆点击\n    login() {\n      this.$refs.loginFormRef.validate( async valid => {\n       if(!valid) return;\n       const { data : res} = await this.$http.post('login',this.loginForm)\n       if(res.meta.status !== 200) return this.$message.error('登陆失败!')\n       this.$message.success('登陆成功!')\n       // 1.将登陆成功之后的 token 保存到客户端的 sessionStorage 中\n       //  1.1 项目中除了登陆之外的其他api接口，必须在登陆之后才能访问\n       //  1.2 token 只应该在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n       window.sessionStorage.setItem(\"token\", res.data.token)\n       // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\n       this.$router.push('/home')\n       \n      })\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  height: 100%;\n  background-color: #2b4b6b;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  .avatar_box {\n    width: 130px;\n    height: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #eee;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #ffff;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #eee;\n    }\n  }\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>"]}]}