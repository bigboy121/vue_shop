{"remainingRequest":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Add.vue?vue&type=style&index=0&id=8de88330&scoped=true&lang=css&","dependencies":[{"path":"/Users/apple/Desktop/黑马电商/vue_shop/src/components/goods/Add.vue","mtime":1587713104000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/黑马电商/vue_shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWNoZWNrYm94IHsKICBtYXJnaW46IDAgNXB4IDAgIWltcG9ydGFudDsKfQoucHJldmlld0ltZ3sKICB3aWR0aDogMTAwJTsKfQouYnRuQWRkewogIG1hcmdpbi10b3A6IDE1cHg7Cn0K"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区 -->\n    <el-card>\n      <!-- 提示区 -->\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\n      <!-- 步骤条区 -->\n      <el-steps :space=\"200\" :active=\"activeIndex - 0\" finish-status=\"success\" align-center>\n        <el-step title=\"基本信息\"></el-step>\n        <el-step title=\"商品参数\"></el-step>\n        <el-step title=\"商品属性\"></el-step>\n        <el-step title=\"商品图片\"></el-step>\n        <el-step title=\"商品内容\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n\n      <!-- tab栏区域 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n        label-position=\"top\"\n      >\n        <el-tabs\n          v-model=\"activeIndex\"\n          :tab-position=\"'left'\"\n          :before-leave=\"beforeTabLeave\"\n          @tab-click=\"tabClicked\"\n        >\n          <el-tab-pane label=\"基本信息\" name=\"0\">\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\n              <el-input v-model=\"addForm.goods_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n              <el-input v-model=\"addForm.goods_weight\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\n              <el-input v-model=\"addForm.goods_number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\n              <el-cascader\n                v-model=\"addForm.goods_cat\"\n                :options=\"catelist\"\n                :props=\"{ expandTrigger: 'hover', label: 'cat_name', value:'cat_id', children: 'children'}\"\n                @change=\"handleChange\"\n              ></el-cascader>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品参数\" name=\"1\">\n            <!-- 渲染表单的item项 -->\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTabData\" :key=\"item.attr_id\">\n              <!-- 复选框组 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb,i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品属性\" name=\"2\">\n            <el-form-item\n              :label=\"item.attr_name\"\n              v-for=\"(item,i) in onlyTabData\"\n              :key=\"item.attr_id\"\n            >\n              <el-input v-model=\"item.attr_vals\"></el-input>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品图片\" name=\"3\">\n            <!-- action 表示图片要上传到后台api地址 -->\n            <el-upload\n              :action=\"upload\"\n              :on-preview=\"handlePreview\"\n              :on-remove=\"handleRemove\"\n              list-type=\"picture\"\n              :headers=\"headerObj\"\n              :on-success=\"handleSuccess\"\n            >\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n            </el-upload>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品内容\" name=\"4\">\n            <!-- 富文本编辑器组件 -->\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n            <!-- 添加商品的按钮 -->\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n    </el-card>\n\n    <!-- 图片预览 -->\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\" >\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  name: \"Add\",\n  data() {\n    return {\n      activeIndex: \"0\",\n      // 添加商品的表单数据对象\n      addForm: {\n        goods_name: \"\",\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        // 商品所属的分类数组\n        goods_cat: [],\n        // 图片的数组\n        pics: [],\n        // 商品的详情描述,\n        goods_introduce: ''\n      },\n      // 添加商品表单验证规则\n      addFormRules: {\n        goods_name: [\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" }\n        ],\n        goods_price: [\n          { required: true, message: \"请输入商品价格\", trigger: \"blur\" }\n        ],\n        goods_weight: [\n          { required: true, message: \"请输入商品重量\", trigger: \"blur\" }\n        ],\n        goods_number: [\n          { required: true, message: \"请输入商品数量\", trigger: \"blur\" }\n        ],\n        goods_cat: [\n          { required: true, message: \"请选择商品分类\", trigger: \"blur\" }\n        ]\n      },\n      // 商品分类\n      catelist: [],\n      // 动态参数列表数据\n      manyTabData: [],\n      // 静态属性列表\n      onlyTabData: [],\n      // 上传图片到url地址\n      upload: \"http://timemeetyou.com:8889/api/private/v1/upload\",\n      // 图片上传组件到headers请求头部对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem(\"token\")\n      },\n      // 预览图片地址\n      previewPath: \"\",\n      // 图片预览显示框\n      previewVisible: false\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取所有商品分类数据\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\");\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取商品分类数据失败！\");\n      }\n\n      this.catelist = res.data;\n    },\n    handleChange() {\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = [];\n      }\n    },\n    beforeTabLeave(activeName, oldActiveName) {\n      if (oldActiveName === \"0\" && this.addForm.goods_cat.length !== 3) {\n        this.$message.error(\"请选择商品分类！\");\n        return false;\n      }\n    },\n    async tabClicked() {\n      // 证明访问的是动态参数面板\n      if (this.activeIndex === \"1\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"many\" }\n          }\n        );\n\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取动态参数失败！\");\n        }\n\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(\" \");\n        });\n        this.manyTabData = res.data;\n      } else if (this.activeIndex === \"2\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"only\" }\n          }\n        );\n\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取静态属性失败！\");\n        }\n\n        this.onlyTabData = res.data;\n      }\n    },\n    // 处理图片预览效果\n    handlePreview(file) {\n      this.previewPath = file.response.data.url;\n      this.previewVisible = true\n    },\n    // 删除图片处理\n    handleRemove(file) {\n      // 1. 获取到将要删除到图片临时路径\n      const filePath = file.response.tmp_path;\n      // 2. 从pics 数组中，找到这个图片对应到索引值\n      const i = this.addForm.pics.findIndex(item => item.pic === filePath);\n      // 3. 调用数组到splice 方法 删除对应到图片信息\n      this.addForm.pics.splice(i, 1);\n    },\n    // 监听图片上传成功的事件\n    handleSuccess(response) {\n      // 1 先拼接得到图片信息对象\n      const picInfo = { pic: response.data.tmp_path };\n      // 2 将图片信息 push到pics数组中\n      this.addForm.pics.push(picInfo);\n    },\n    // 添加商品\n    add() {\n      this.$refs.addFormRef.validate(valid => {\n        if(!valid) {\n          return this.$message.error('请填写必要的表单项！')\n        }\n        // 执行业务逻辑\n\n      })\n    }\n  },\n  computed: {\n    cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2];\n      }\n      return null;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.el-checkbox {\n  margin: 0 5px 0 !important;\n}\n.previewImg{\n  width: 100%;\n}\n.btnAdd{\n  margin-top: 15px;\n}\n</style>"]}]}