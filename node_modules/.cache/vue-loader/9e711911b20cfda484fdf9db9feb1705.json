{"remainingRequest":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/goods/Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/src/components/goods/Cate.vue","mtime":1587549614000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/babel-loader/lib/index.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/cache-loader/dist/cjs.js","mtime":1587821861000},{"path":"/Users/apple/Desktop/VUE项目_已完结/商品后台管理系统_完结/vue_shop/node_modules/vue-loader/lib/index.js","mtime":1587821881000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Cate.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 表格 -->\n      <tree-table\n        class=\"tree-table\"\n        :data=\"cateList\"\n        :columns=\"columns\"\n        :selection-type=\"false\"\n        :expand-type=\"false\"\n        show-index\n        index-text=\"#\"\n        border\n      >\n      <!-- 是否有效 -->\n      <template slot=\"isok\" slot-scope=\"scope\">\n          <i\n            class=\"el-icon-success\"\n            v-if=\"scope.row.cat_deleted === false\"\n            style=\"color: lightgreen;\"\n          ></i>\n          <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\n      </template>\n\n      <!-- 排序 -->\n      <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\n          <el-tag size=\"mini\" v-else-if=\"scope.row.cat_level === 1\" type='success'>二级</el-tag>\n          <el-tag size=\"mini\" v-else type=\"warning\">三级</el-tag>\n      </template size=\"mini\">\n\n      <!-- 操作 -->\n      <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"editCate(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"selectCate(scope.row.cat_id)\">删除</el-button>\n      </template>\n\n      \n      </tree-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"queryInfo.pagenum\"\n      :page-sizes=\"[5, 10, 15, 20]\"\n      :page-size=\"queryInfo.pagesize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!-- 添加分类的对话框 -->\n    <el-dialog\n      title=\"添加分类\"\n      :visible.sync=\"addCateDialogVisible\"\n      width=\"50%\"\n      @close=\"addCateDialogClosed\"\n    >\n      <!-- 添加分类的表单 -->\n      <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类：\">\n          <!-- options 指定数据源 -->\n          <!-- caseaderProps 用来指定对象 -->\n           <el-cascader\n            v-model=\"selectedKeys\"\n            :options=\"parentCateList\"\n            :props=\"{ expandTrigger: 'hover', value: 'cat_id', label: 'cat_name', children: 'children' }\"\n            @change=\"parentCateChanged\"\n            clearable\n            change-on-select></el-cascader>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑／修改分类对话框 -->\n    <el-dialog\n      title=\"修改分类\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\">\n      <el-form :model=\"editCateForm\" :rules=\"addCateFormRules\" ref=\"editCateFormRef\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editCateInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Cate\",\n  data() {\n    return {\n      // 查询数据的条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类的数据列表，默认为空\n      cateList: [],\n      // 总数据条数\n      total: 0,\n      // 为table指定列的定义\n      columns: [\n        {\n          label: \"分类名称\",\n          prop: \"cat_name\"\n        },\n        {\n          label: \"是否有效\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"isok\"\n        },\n        {\n          label: \"排序\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"order\"\n        },\n        {\n          label: \"操作\",\n          // 表示将当前定义为模板列\n          type: \"template\",\n          // 表示当前这一列使用模板名称\n          template: \"opt\"\n        }\n      ],\n      // 控制分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      // 添加分类表单数据对象\n      addCateForm: {\n        // 将要添加的分类名称\n        cat_name: '',\n        // 父级分类id 必填\n        cat_pid: 0,\n        // 分类等级 默认添加的是一级\n        cat_level: 0,\n      },\n      // 添加表单的验证规则对象\n      addCateFormRules: {\n        cat_name: [\n           { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\n        ]\n      },\n      // 父级分类的列表\n      parentCateList: [],\n      // 指定级联选择器的配置对象\n      // caseaderProps: {\n      //   value: 'cat_id',\n      //   label: 'cat_name',\n      //   children: 'children'\n      // },\n      // 选中的父级分类id数组\n      selectedKeys:[],\n      // 控制显示修改分类信息对话框显示\n      editDialogVisible: false,\n      // 编辑分类的数据\n      editCateForm: {\n        cat_id: '',\n        cat_name: ''\n      },\n      // 编辑分类验证规则\n      // editFormRules: {\n      //   cateName: [\n      //     { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\n      //   ]\n      // }\n    };\n  },\n  created() {\n    // 获取商品数据\n    this.getCateList();\n  },\n  methods: {\n    // 获取商品数据\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\", {\n        params: this.queryInfo\n      });\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取商品分类失败！\");\n      }\n\n      // 把数据列表赋值\n      this.cateList = res.data.result;\n\n      // 为总数据条数赋值\n      this.total = res.data.total;\n    },\n    // 监听pageSize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getCateList();\n    },\n    // 监听pagenum的改变\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getCateList();\n    },\n    // 点击按钮 显示添加分类对话框\n    showAddCateDialog() {\n      // 先获取数据 再展示\n      this.getParentCateList()\n      this.addCateDialogVisible = true\n      \n    },\n    // 获取父级分类数据的列表\n    async getParentCateList() {\n      const {data : res} = await this.$http.get('categories', {\n        params: { type: 2}\n      })\n      if(res.meta.status !== 200) {\n        return this.$message.error('获取父级分类数据失败！')\n      }\n      this.parentCateList = res.data\n    },\n    // 选择项发生变化触发这个函数\n    parentCateChanged() {\n      // 如果 selectedKeys 数组中的 length 大于0 证明选中的父级分类\n      // 反之，就说明没有选择任何父级分类\n      if(this.selectedKeys.length >0) {\n        // 分类id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n        // 分类等级\n        this.addCateForm.cat_level = this.selectedKeys.length\n        return\n      }else {\n         this.addCateForm.cat_pid = 0\n        this.addCateForm.cat_level = 0\n      }\n    },\n    // 点击确定按钮，添加新的分类\n    addCate() {\n      this.$refs.addCateFormRef.validate(async valid => {\n        if(!valid) return\n        const {data : res} = await this.$http.post('categories/', this.addCateForm)\n        if(res.meta.status !== 201) {\n          return this.$message.error('添加分类失败！')\n        }\n        this.$message.success('添加分类成功！')\n        this.getCateList()\n        this.addCateDialogVisible = false\n      })\n    },\n    // 监听对话框关闭，重置数据\n    addCateDialogClosed() {\n      this.$refs.addCateFormRef.resetFields()\n      this.selectedKeys = []\n      this.addCateForm.cat_level = 0\n      this.addCateForm.cat_pid = 0\n    },\n    // 监听编辑按钮点击\n    editCate(row) {\n      // 将选中的数据保存\n      this.editCateForm.cat_id = row.cat_id\n      this.editCateForm.cat_name = row.cat_name\n\n      // 显示对话框\n      this.editDialogVisible = true\n    },\n    // 监听编辑分类确定按钮点击\n    async editCateInfo() {\n      const { data : res } = await this.$http.put('categories/' + this.editCateForm.cat_id, {\n        cat_name: this.editCateForm.cat_name\n      })\n\n      if(res.meta.status !== 200) {\n        return this.$message.error('修改分类数据失败！')\n      }\n\n      this.$message.success('修改分类数据成功！')\n\n\n      this.getCateList()\n\n      this.editCateForm.cat_id = ''\n      this.editCateForm.cat_name = ''\n\n      this.editDialogVisible = false\n    },\n    // 监听删除分类数据按钮\n    async selectCate(id) {\n      \n      const confirmResult = await this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"取消删除！\");\n      }\n\n      const { data: res } = await this.$http.delete('categories/'+ id)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除分类失败！\")\n      }\n\n      this.$message.success(\"删除分类成功！\")\n      \n      this.getCateList()\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.tree-table {\n  margin-top: 15px;\n}\n.el-cascader {\n  width: 100%;\n}\n</style>"]}]}